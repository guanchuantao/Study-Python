# @author :  Chuantao.Guan
# @time : 2023-03-26
# @file : handle_type.py
# @describe : 列表、元组、集合、字典类型数据的操作（添加数据、删除数据、替换数据、查询数据、判断某数据是否存在该列表里）


# 列表操作
# 添加数据
# 要求：在列表末尾添加一个元素
# 方式：使用append()方法
# 举例：将数字1添加到列表a的末尾
a = [2, 3, 4]
a.append(1)

# 删除数据
# 要求：删除列表中第一个出现的指定元素
# 方式：使用remove()方法
# 举例：删除列表a中的数字2
a.remove(2)

# 替换数据
# 要求：将列表中指定位置的元素替换为新的元素
# 方式：使用赋值运算符
# 举例：将列表a中的第二个元素替换为数字5
a[1] = 5

# 查询数据
# 要求：返回列表中第一个出现的指定元素的索引
# 方式：使用index()方法
# 举例：查询数字3在列表a中的索引
a.index(3)

# 判断某数据是否存在该数据里
# 要求：判断指定元素是否在列表中
# 方式：使用in关键字
# 举例：判断数字4是否在列表a中
4 in a

# 元组操作
# 添加数据
# 要求：元组是不可变类型，无法添加数据

# 删除数据
# 要求：删除元组中第一个出现的指定元素
# 方式：将元组转换为列表，使用remove()方法，再将列表转换为元组
# 举例：删除元组a中的数字2
a = (1, 2, 3, 4)
b = list(a)
b.remove(2)
a = tuple(b)

# 替换数据
# 要求：元组是不可变类型，无法替换数据

# 查询数据
# 要求：返回元组中第一个出现的指定元素的索引
# 方式：使用index()方法
# 举例：查询数字3在元组a中的索引
a.index(3)

# 判断某数据是否存在该数据里
# 要求：判断指定元素是否在元组中
# 方式：使用in关键字
# 举例：判断数字4是否在元组a中
4 in a

# 集合操作
# 添加数据
# 要求：向集合中添加一个元素
# 方式：使用add()方法
# 举例：将数字1添加到集合a中
a = {2, 3, 4}
a.add(1)

# 删除数据
# 要求：删除集合中指定的元素
# 方式：使用remove()方法
# 举例：删除集合a中的数字2
a.remove(2)

# 替换数据
# 要求：集合中的元素是不可变类型，无法替换数据

# 查询数据
# 要求：返回集合中指定元素是否存在
# 方式：使用in关键字
# 举例：查询数字3是否在集合a中
3 in a

# 判断某数据是否存在该数据里
# 要求：判断指定元素是否在集合中
# 方式：使用in关键字
# 举例：判断数字4是否在集合a中
4 in a

# 字典操作
# 添加数据
# 要求：向字典中添加一个键值对
# 方式：使用赋值运算符或者update()方法
# 举例：将键为'a'，值为1的键值对添加到字典a中
a = {'b': 2, 'c': 3}
a['a'] = 1
a.update({'a': 1})

# 删除数据
# 要求：删除字典中指定的键值对
# 方式：使用del关键字或者pop()方法
# 举例：删除字典a中键为'b'的键值对
del a['b']
a.pop('b', None)

# 替换数据
# 要求：将字典中指定键的值替换为新的值
# 方式：使用赋值运算符
# 举例：将字典a中键为'c'的值替换为数字4
a['c'] = 4

# 查询数据
# 要求：返回字典中指定键的值
# 方式：使用get()方法或者直接使用键
# 举例：查询字典a中键为'b'的值
a.get('b')
a['b']

# 判断某数据是否存在该数据里
# 要求：判断指定键是否在字典中
# 方式：使用in关键字或者keys()方法
# 举例：判断键为'a'是否在字典a中
'a' in a
'a' in a.keys()
